apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'
apply plugin: 'kotlin-jpa'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

buildscript {
    ext {
        kotlin_version = '1.3.61'
        spring_boot_version = '2.2.4.RELEASE'
        dependency_management_version = '1.0.9.RELEASE'
        tk_version = '4.1.5'
        mybatis_version = '2.1.1'
        commons_text_version = '1.3'
        commons_io_version = '2.6'
        commons_beanutils_version = '1.9.3'
        postgresql_version = '42.2.9'
        jackson_version = '2.10.1'
        jupiter_version = '5.2.0'
    }
    repositories {
        mavenLocal()
        maven { url "https://maven.aliyun.com/nexus/content/groups/public/" }
        mavenCentral()
        maven { url "https://repo.spring.io/plugins-release" }
    }
    dependencies {
        classpath "io.spring.gradle:dependency-management-plugin:$dependency_management_version"
        classpath "org.springframework.boot:spring-boot-gradle-plugin:$spring_boot_version"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.jetbrains.kotlin:kotlin-allopen:$kotlin_version"
        classpath "org.jetbrains.kotlin:kotlin-noarg:$kotlin_version"
    }
}

repositories {
    mavenLocal()
    maven { url "https://maven.aliyun.com/nexus/content/groups/public/" }
    mavenCentral()
    maven { url "https://repo.spring.io/plugins-release" }
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.boot:spring-boot-starter:$spring_boot_version"
    }
}

configurations {
    implementation.exclude module: "spring-boot-starter-tomcat"
}

dependencies {
    // Spring
    implementation("org.springframework.boot:spring-boot-starter-web")
    implementation("org.springframework.boot:spring-boot-starter-undertow")
    implementation("org.springframework.boot:spring-boot-starter-security")
    implementation "org.springframework.boot:spring-boot-starter-data-redis"
    implementation("org.springframework.security.oauth.boot:spring-security-oauth2-autoconfigure:$spring_boot_version")

    // Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"

    // Other
    implementation "tk.mybatis:mapper:$tk_version"
    implementation "org.mybatis.spring.boot:mybatis-spring-boot-starter:$mybatis_version"
    implementation "org.apache.commons:commons-text:$commons_text_version"
    implementation "commons-io:commons-io:$commons_io_version"
    implementation "commons-beanutils:commons-beanutils:$commons_beanutils_version"
    implementation "com.fasterxml.jackson.module:jackson-module-kotlin:$jackson_version"
    implementation "org.postgresql:postgresql:$postgresql_version"

    // Test
    testImplementation("org.springframework.boot:spring-boot-starter-test") {
        exclude group: 'junit'
    }
    testImplementation("org.junit.jupiter:junit-jupiter-api:$jupiter_version")
}